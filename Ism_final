{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":320629,"sourceType":"datasetVersion","datasetId":134969},{"sourceId":8152614,"sourceType":"datasetVersion","datasetId":4821918}],"dockerImageVersionId":30673,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/virtualshivam/network-anamoly-analysis-via-clustering?scriptVersionId=172604697\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Project Performed by Badal Desai 21BCE4005 and Shivam Dave 21BCB0107 About Dataset","metadata":{}},{"cell_type":"code","source":"data = pd.read_csv('/kaggle/input/network-anamoly-detection/Train.txt')","metadata":{"execution":{"iopub.status.busy":"2024-04-15T15:52:06.710967Z","iopub.execute_input":"2024-04-15T15:52:06.711554Z","iopub.status.idle":"2024-04-15T15:52:07.337454Z","shell.execute_reply.started":"2024-04-15T15:52:06.711524Z","shell.execute_reply":"2024-04-15T15:52:07.336253Z"},"trusted":true},"execution_count":3,"outputs":[]},{"cell_type":"code","source":"data.head(4)","metadata":{"execution":{"iopub.status.busy":"2024-04-15T15:52:09.794877Z","iopub.execute_input":"2024-04-15T15:52:09.795249Z","iopub.status.idle":"2024-04-15T15:52:09.833047Z","shell.execute_reply.started":"2024-04-15T15:52:09.79522Z","shell.execute_reply":"2024-04-15T15:52:09.832253Z"},"trusted":true},"execution_count":4,"outputs":[{"execution_count":4,"output_type":"execute_result","data":{"text/plain":"   0  tcp ftp_data  SF  491   0.1  0.2  0.3  0.4  0.5  ...  0.17  0.03  \\\n0  0  udp    other  SF  146     0    0    0    0    0  ...   0.0  0.60   \n1  0  tcp  private  S0    0     0    0    0    0    0  ...   0.1  0.05   \n2  0  tcp     http  SF  232  8153    0    0    0    0  ...   1.0  0.00   \n3  0  tcp     http  SF  199   420    0    0    0    0  ...   1.0  0.00   \n\n   0.17.1  0.00.6  0.00.7  0.00.8  0.05  0.00.9   normal  20  \n0    0.88    0.00    0.00    0.00   0.0    0.00   normal  15  \n1    0.00    0.00    1.00    1.00   0.0    0.00  neptune  19  \n2    0.03    0.04    0.03    0.01   0.0    0.01   normal  21  \n3    0.00    0.00    0.00    0.00   0.0    0.00   normal  21  \n\n[4 rows x 43 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>0</th>\n      <th>tcp</th>\n      <th>ftp_data</th>\n      <th>SF</th>\n      <th>491</th>\n      <th>0.1</th>\n      <th>0.2</th>\n      <th>0.3</th>\n      <th>0.4</th>\n      <th>0.5</th>\n      <th>...</th>\n      <th>0.17</th>\n      <th>0.03</th>\n      <th>0.17.1</th>\n      <th>0.00.6</th>\n      <th>0.00.7</th>\n      <th>0.00.8</th>\n      <th>0.05</th>\n      <th>0.00.9</th>\n      <th>normal</th>\n      <th>20</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>udp</td>\n      <td>other</td>\n      <td>SF</td>\n      <td>146</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.60</td>\n      <td>0.88</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>0.0</td>\n      <td>0.00</td>\n      <td>normal</td>\n      <td>15</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0</td>\n      <td>tcp</td>\n      <td>private</td>\n      <td>S0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0.1</td>\n      <td>0.05</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>1.00</td>\n      <td>1.00</td>\n      <td>0.0</td>\n      <td>0.00</td>\n      <td>neptune</td>\n      <td>19</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0</td>\n      <td>tcp</td>\n      <td>http</td>\n      <td>SF</td>\n      <td>232</td>\n      <td>8153</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>0.00</td>\n      <td>0.03</td>\n      <td>0.04</td>\n      <td>0.03</td>\n      <td>0.01</td>\n      <td>0.0</td>\n      <td>0.01</td>\n      <td>normal</td>\n      <td>21</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0</td>\n      <td>tcp</td>\n      <td>http</td>\n      <td>SF</td>\n      <td>199</td>\n      <td>420</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>0.0</td>\n      <td>0.00</td>\n      <td>normal</td>\n      <td>21</td>\n    </tr>\n  </tbody>\n</table>\n<p>4 rows Ã— 43 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"# Assigning Column names","metadata":{"execution":{"iopub.status.busy":"2024-04-02T11:17:29.901856Z","iopub.execute_input":"2024-04-02T11:17:29.902216Z","iopub.status.idle":"2024-04-02T11:17:29.912275Z","shell.execute_reply.started":"2024-04-02T11:17:29.902189Z","shell.execute_reply":"2024-04-02T11:17:29.910913Z"}}},{"cell_type":"code","source":"columns_names = [\"duration\",\"protocol_type\",\"service\",\"flag\",\"src_bytes\",\"dst_bytes\",\"land\",\n\"wrong_fragment\",\"urgent\",\"hot\",\"num_failed_logins\",\"logged_in\",\n\"num_compromised\",\"root_shell\",\"su_attempted\",\"num_root\",\"num_file_creations\",\n\"num_shells\",\"num_access_files\",\"num_outbound_cmds\",\"is_host_login\",\n\"is_guest_login\",\"count\",\"srv_count\",\"serror_rate\", \"srv_serror_rate\",\n\"rerror_rate\",\"srv_rerror_rate\",\"same_srv_rate\", \"diff_srv_rate\", \"srv_diff_host_rate\",\"dst_host_count\",\"dst_host_srv_count\",\"dst_host_same_srv_rate\",\n\"dst_host_diff_srv_rate\",\"dst_host_same_src_port_rate\",\n\"dst_host_srv_diff_host_rate\",\"dst_host_serror_rate\",\"dst_host_srv_serror_rate\",\n\"dst_host_rerror_rate\",\"dst_host_srv_rerror_rate\",\"attack\", \"last_flag\"]","metadata":{"execution":{"iopub.status.busy":"2024-04-15T15:52:13.466909Z","iopub.execute_input":"2024-04-15T15:52:13.46755Z","iopub.status.idle":"2024-04-15T15:52:13.474546Z","shell.execute_reply.started":"2024-04-15T15:52:13.467513Z","shell.execute_reply":"2024-04-15T15:52:13.473357Z"},"trusted":true},"execution_count":5,"outputs":[]},{"cell_type":"code","source":"data = np.array(data)","metadata":{"execution":{"iopub.status.busy":"2024-04-15T15:52:35.00269Z","iopub.execute_input":"2024-04-15T15:52:35.003085Z","iopub.status.idle":"2024-04-15T15:52:35.040713Z","shell.execute_reply.started":"2024-04-15T15:52:35.003053Z","shell.execute_reply":"2024-04-15T15:52:35.03976Z"},"trusted":true},"execution_count":9,"outputs":[]},{"cell_type":"code","source":"df = pd.DataFrame(data,columns=columns_names)\ndf.sample(4)","metadata":{"execution":{"iopub.status.busy":"2024-04-15T15:52:37.994785Z","iopub.execute_input":"2024-04-15T15:52:37.995193Z","iopub.status.idle":"2024-04-15T15:52:38.046169Z","shell.execute_reply.started":"2024-04-15T15:52:37.995162Z","shell.execute_reply":"2024-04-15T15:52:38.044989Z"},"trusted":true},"execution_count":10,"outputs":[{"execution_count":10,"output_type":"execute_result","data":{"text/plain":"      duration protocol_type   service flag src_bytes dst_bytes land  \\\n82102        0           tcp      http  REJ         0         0    0   \n1679         0          icmp     red_i   SF        91         0    0   \n48720        0           udp  domain_u   SF        44        75    0   \n25563        0           tcp   private  REJ         0         0    0   \n\n      wrong_fragment urgent hot  ... dst_host_same_srv_rate  \\\n82102              0      0   0  ...                    1.0   \n1679               0      0   0  ...                   0.05   \n48720              0      0   0  ...                    1.0   \n25563              0      0   0  ...                    0.0   \n\n      dst_host_diff_srv_rate dst_host_same_src_port_rate  \\\n82102                    0.0                        0.05   \n1679                    0.02                        0.05   \n48720                   0.01                         0.0   \n25563                    1.0                         0.0   \n\n      dst_host_srv_diff_host_rate dst_host_serror_rate  \\\n82102                        0.14                  0.0   \n1679                          0.0                  0.0   \n48720                         0.0                  0.0   \n25563                         0.0                 0.12   \n\n      dst_host_srv_serror_rate dst_host_rerror_rate dst_host_srv_rerror_rate  \\\n82102                      0.0                  1.0                     0.57   \n1679                       0.0                 0.11                      0.0   \n48720                      0.0                  0.0                      0.0   \n25563                      0.0                 0.87                      1.0   \n\n       attack last_flag  \n82102  normal        21  \n1679   normal        19  \n48720  normal        18  \n25563   satan        20  \n\n[4 rows x 43 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>duration</th>\n      <th>protocol_type</th>\n      <th>service</th>\n      <th>flag</th>\n      <th>src_bytes</th>\n      <th>dst_bytes</th>\n      <th>land</th>\n      <th>wrong_fragment</th>\n      <th>urgent</th>\n      <th>hot</th>\n      <th>...</th>\n      <th>dst_host_same_srv_rate</th>\n      <th>dst_host_diff_srv_rate</th>\n      <th>dst_host_same_src_port_rate</th>\n      <th>dst_host_srv_diff_host_rate</th>\n      <th>dst_host_serror_rate</th>\n      <th>dst_host_srv_serror_rate</th>\n      <th>dst_host_rerror_rate</th>\n      <th>dst_host_srv_rerror_rate</th>\n      <th>attack</th>\n      <th>last_flag</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>82102</th>\n      <td>0</td>\n      <td>tcp</td>\n      <td>http</td>\n      <td>REJ</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.05</td>\n      <td>0.14</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.57</td>\n      <td>normal</td>\n      <td>21</td>\n    </tr>\n    <tr>\n      <th>1679</th>\n      <td>0</td>\n      <td>icmp</td>\n      <td>red_i</td>\n      <td>SF</td>\n      <td>91</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0.05</td>\n      <td>0.02</td>\n      <td>0.05</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.11</td>\n      <td>0.0</td>\n      <td>normal</td>\n      <td>19</td>\n    </tr>\n    <tr>\n      <th>48720</th>\n      <td>0</td>\n      <td>udp</td>\n      <td>domain_u</td>\n      <td>SF</td>\n      <td>44</td>\n      <td>75</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>0.01</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>normal</td>\n      <td>18</td>\n    </tr>\n    <tr>\n      <th>25563</th>\n      <td>0</td>\n      <td>tcp</td>\n      <td>private</td>\n      <td>REJ</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.12</td>\n      <td>0.0</td>\n      <td>0.87</td>\n      <td>1.0</td>\n      <td>satan</td>\n      <td>20</td>\n    </tr>\n  </tbody>\n</table>\n<p>4 rows Ã— 43 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"# About the Dataset","metadata":{}},{"cell_type":"code","source":"df.shape","metadata":{"execution":{"iopub.status.busy":"2024-04-15T15:52:40.619362Z","iopub.execute_input":"2024-04-15T15:52:40.620448Z","iopub.status.idle":"2024-04-15T15:52:40.626966Z","shell.execute_reply.started":"2024-04-15T15:52:40.620409Z","shell.execute_reply":"2024-04-15T15:52:40.625758Z"},"trusted":true},"execution_count":11,"outputs":[{"execution_count":11,"output_type":"execute_result","data":{"text/plain":"(125972, 43)"},"metadata":{}}]},{"cell_type":"code","source":"print('Information of Data','\\n')\nprint(df.info(),'\\n')","metadata":{"execution":{"iopub.status.busy":"2024-04-15T15:52:43.050613Z","iopub.execute_input":"2024-04-15T15:52:43.050977Z","iopub.status.idle":"2024-04-15T15:52:43.516672Z","shell.execute_reply.started":"2024-04-15T15:52:43.050947Z","shell.execute_reply":"2024-04-15T15:52:43.515582Z"},"trusted":true},"execution_count":12,"outputs":[{"name":"stdout","text":"Information of Data \n\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 125972 entries, 0 to 125971\nData columns (total 43 columns):\n #   Column                       Non-Null Count   Dtype \n---  ------                       --------------   ----- \n 0   duration                     125972 non-null  object\n 1   protocol_type                125972 non-null  object\n 2   service                      125972 non-null  object\n 3   flag                         125972 non-null  object\n 4   src_bytes                    125972 non-null  object\n 5   dst_bytes                    125972 non-null  object\n 6   land                         125972 non-null  object\n 7   wrong_fragment               125972 non-null  object\n 8   urgent                       125972 non-null  object\n 9   hot                          125972 non-null  object\n 10  num_failed_logins            125972 non-null  object\n 11  logged_in                    125972 non-null  object\n 12  num_compromised              125972 non-null  object\n 13  root_shell                   125972 non-null  object\n 14  su_attempted                 125972 non-null  object\n 15  num_root                     125972 non-null  object\n 16  num_file_creations           125972 non-null  object\n 17  num_shells                   125972 non-null  object\n 18  num_access_files             125972 non-null  object\n 19  num_outbound_cmds            125972 non-null  object\n 20  is_host_login                125972 non-null  object\n 21  is_guest_login               125972 non-null  object\n 22  count                        125972 non-null  object\n 23  srv_count                    125972 non-null  object\n 24  serror_rate                  125972 non-null  object\n 25  srv_serror_rate              125972 non-null  object\n 26  rerror_rate                  125972 non-null  object\n 27  srv_rerror_rate              125972 non-null  object\n 28  same_srv_rate                125972 non-null  object\n 29  diff_srv_rate                125972 non-null  object\n 30  srv_diff_host_rate           125972 non-null  object\n 31  dst_host_count               125972 non-null  object\n 32  dst_host_srv_count           125972 non-null  object\n 33  dst_host_same_srv_rate       125972 non-null  object\n 34  dst_host_diff_srv_rate       125972 non-null  object\n 35  dst_host_same_src_port_rate  125972 non-null  object\n 36  dst_host_srv_diff_host_rate  125972 non-null  object\n 37  dst_host_serror_rate         125972 non-null  object\n 38  dst_host_srv_serror_rate     125972 non-null  object\n 39  dst_host_rerror_rate         125972 non-null  object\n 40  dst_host_srv_rerror_rate     125972 non-null  object\n 41  attack                       125972 non-null  object\n 42  last_flag                    125972 non-null  object\ndtypes: object(43)\nmemory usage: 41.3+ MB\nNone \n\n","output_type":"stream"}]},{"cell_type":"code","source":"df.iloc[:,:10].describe()","metadata":{"execution":{"iopub.status.busy":"2024-04-15T15:52:46.942913Z","iopub.execute_input":"2024-04-15T15:52:46.943667Z","iopub.status.idle":"2024-04-15T15:52:47.302772Z","shell.execute_reply.started":"2024-04-15T15:52:46.943624Z","shell.execute_reply":"2024-04-15T15:52:47.301682Z"},"trusted":true},"execution_count":13,"outputs":[{"execution_count":13,"output_type":"execute_result","data":{"text/plain":"        duration protocol_type service    flag  src_bytes  dst_bytes    land  \\\ncount     125972        125972  125972  125972     125972     125972  125972   \nunique      2981             3      70      11       3341       9326       2   \ntop            0           tcp    http      SF          0          0       0   \nfreq      115954        102688   40338   74944      49392      67966  125947   \n\n        wrong_fragment  urgent     hot  \ncount           125972  125972  125972  \nunique               3       4      28  \ntop                  0       0       0  \nfreq            124882  125963  123301  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>duration</th>\n      <th>protocol_type</th>\n      <th>service</th>\n      <th>flag</th>\n      <th>src_bytes</th>\n      <th>dst_bytes</th>\n      <th>land</th>\n      <th>wrong_fragment</th>\n      <th>urgent</th>\n      <th>hot</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>125972</td>\n      <td>125972</td>\n      <td>125972</td>\n      <td>125972</td>\n      <td>125972</td>\n      <td>125972</td>\n      <td>125972</td>\n      <td>125972</td>\n      <td>125972</td>\n      <td>125972</td>\n    </tr>\n    <tr>\n      <th>unique</th>\n      <td>2981</td>\n      <td>3</td>\n      <td>70</td>\n      <td>11</td>\n      <td>3341</td>\n      <td>9326</td>\n      <td>2</td>\n      <td>3</td>\n      <td>4</td>\n      <td>28</td>\n    </tr>\n    <tr>\n      <th>top</th>\n      <td>0</td>\n      <td>tcp</td>\n      <td>http</td>\n      <td>SF</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>freq</th>\n      <td>115954</td>\n      <td>102688</td>\n      <td>40338</td>\n      <td>74944</td>\n      <td>49392</td>\n      <td>67966</td>\n      <td>125947</td>\n      <td>124882</td>\n      <td>125963</td>\n      <td>123301</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df.iloc[:,10:20].describe()","metadata":{"execution":{"iopub.status.busy":"2024-04-15T15:52:50.190891Z","iopub.execute_input":"2024-04-15T15:52:50.191663Z","iopub.status.idle":"2024-04-15T15:52:50.526929Z","shell.execute_reply.started":"2024-04-15T15:52:50.191622Z","shell.execute_reply":"2024-04-15T15:52:50.52565Z"},"trusted":true},"execution_count":14,"outputs":[{"execution_count":14,"output_type":"execute_result","data":{"text/plain":"        num_failed_logins  logged_in  num_compromised  root_shell  \\\ncount              125972     125972           125972      125972   \nunique                  6          2               88           2   \ntop                     0          0                0           0   \nfreq               125850      76120           124686      125803   \n\n        su_attempted  num_root  num_file_creations  num_shells  \\\ncount         125972    125972              125972      125972   \nunique             3        82                  35           3   \ntop                0         0                   0           0   \nfreq          125892    125323              125685      125925   \n\n        num_access_files  num_outbound_cmds  \ncount             125972             125972  \nunique                10                  1  \ntop                    0                  0  \nfreq              125601             125972  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>num_failed_logins</th>\n      <th>logged_in</th>\n      <th>num_compromised</th>\n      <th>root_shell</th>\n      <th>su_attempted</th>\n      <th>num_root</th>\n      <th>num_file_creations</th>\n      <th>num_shells</th>\n      <th>num_access_files</th>\n      <th>num_outbound_cmds</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>125972</td>\n      <td>125972</td>\n      <td>125972</td>\n      <td>125972</td>\n      <td>125972</td>\n      <td>125972</td>\n      <td>125972</td>\n      <td>125972</td>\n      <td>125972</td>\n      <td>125972</td>\n    </tr>\n    <tr>\n      <th>unique</th>\n      <td>6</td>\n      <td>2</td>\n      <td>88</td>\n      <td>2</td>\n      <td>3</td>\n      <td>82</td>\n      <td>35</td>\n      <td>3</td>\n      <td>10</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>top</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>freq</th>\n      <td>125850</td>\n      <td>76120</td>\n      <td>124686</td>\n      <td>125803</td>\n      <td>125892</td>\n      <td>125323</td>\n      <td>125685</td>\n      <td>125925</td>\n      <td>125601</td>\n      <td>125972</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df.iloc[:,20:30].describe()","metadata":{"execution":{"iopub.status.busy":"2024-04-15T15:52:56.63472Z","iopub.execute_input":"2024-04-15T15:52:56.635129Z","iopub.status.idle":"2024-04-15T15:52:56.908051Z","shell.execute_reply.started":"2024-04-15T15:52:56.635089Z","shell.execute_reply":"2024-04-15T15:52:56.90687Z"},"trusted":true},"execution_count":15,"outputs":[{"execution_count":15,"output_type":"execute_result","data":{"text/plain":"        is_host_login  is_guest_login   count  srv_count  serror_rate  \\\ncount          125972          125972  125972     125972     125972.0   \nunique              2               2     512        509         89.0   \ntop                 0               0       1          1          0.0   \nfreq           125971          124785   27763      25398      86828.0   \n\n        srv_serror_rate  rerror_rate  srv_rerror_rate  same_srv_rate  \\\ncount          125972.0     125972.0         125972.0       125972.0   \nunique             86.0         82.0             62.0          101.0   \ntop                 0.0          0.0              0.0            1.0   \nfreq            88753.0     109782.0         109766.0        76811.0   \n\n        diff_srv_rate  \ncount        125972.0  \nunique           95.0  \ntop               0.0  \nfreq          76216.0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>is_host_login</th>\n      <th>is_guest_login</th>\n      <th>count</th>\n      <th>srv_count</th>\n      <th>serror_rate</th>\n      <th>srv_serror_rate</th>\n      <th>rerror_rate</th>\n      <th>srv_rerror_rate</th>\n      <th>same_srv_rate</th>\n      <th>diff_srv_rate</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>125972</td>\n      <td>125972</td>\n      <td>125972</td>\n      <td>125972</td>\n      <td>125972.0</td>\n      <td>125972.0</td>\n      <td>125972.0</td>\n      <td>125972.0</td>\n      <td>125972.0</td>\n      <td>125972.0</td>\n    </tr>\n    <tr>\n      <th>unique</th>\n      <td>2</td>\n      <td>2</td>\n      <td>512</td>\n      <td>509</td>\n      <td>89.0</td>\n      <td>86.0</td>\n      <td>82.0</td>\n      <td>62.0</td>\n      <td>101.0</td>\n      <td>95.0</td>\n    </tr>\n    <tr>\n      <th>top</th>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>freq</th>\n      <td>125971</td>\n      <td>124785</td>\n      <td>27763</td>\n      <td>25398</td>\n      <td>86828.0</td>\n      <td>88753.0</td>\n      <td>109782.0</td>\n      <td>109766.0</td>\n      <td>76811.0</td>\n      <td>76216.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df.iloc[:,30:42].describe()","metadata":{"execution":{"iopub.status.busy":"2024-04-15T15:52:59.254985Z","iopub.execute_input":"2024-04-15T15:52:59.255373Z","iopub.status.idle":"2024-04-15T15:52:59.563498Z","shell.execute_reply.started":"2024-04-15T15:52:59.255341Z","shell.execute_reply":"2024-04-15T15:52:59.562373Z"},"trusted":true},"execution_count":16,"outputs":[{"execution_count":16,"output_type":"execute_result","data":{"text/plain":"        srv_diff_host_rate  dst_host_count  dst_host_srv_count  \\\ncount             125972.0          125972              125972   \nunique                60.0             256                 256   \ntop                    0.0             255                 255   \nfreq               97573.0           74099               35993   \n\n        dst_host_same_srv_rate  dst_host_diff_srv_rate  \\\ncount                 125972.0                125972.0   \nunique                   101.0                   101.0   \ntop                        1.0                     0.0   \nfreq                   49059.0                 46989.0   \n\n        dst_host_same_src_port_rate  dst_host_srv_diff_host_rate  \\\ncount                      125972.0                     125972.0   \nunique                        101.0                         75.0   \ntop                             0.0                          0.0   \nfreq                        63023.0                      86903.0   \n\n        dst_host_serror_rate  dst_host_srv_serror_rate  dst_host_rerror_rate  \\\ncount               125972.0                  125972.0              125972.0   \nunique                 101.0                     100.0                 101.0   \ntop                      0.0                       0.0                   0.0   \nfreq                 81385.0                   85359.0              103178.0   \n\n        dst_host_srv_rerror_rate  attack  \ncount                   125972.0  125972  \nunique                     101.0      23  \ntop                          0.0  normal  \nfreq                    106615.0   67342  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>srv_diff_host_rate</th>\n      <th>dst_host_count</th>\n      <th>dst_host_srv_count</th>\n      <th>dst_host_same_srv_rate</th>\n      <th>dst_host_diff_srv_rate</th>\n      <th>dst_host_same_src_port_rate</th>\n      <th>dst_host_srv_diff_host_rate</th>\n      <th>dst_host_serror_rate</th>\n      <th>dst_host_srv_serror_rate</th>\n      <th>dst_host_rerror_rate</th>\n      <th>dst_host_srv_rerror_rate</th>\n      <th>attack</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>125972.0</td>\n      <td>125972</td>\n      <td>125972</td>\n      <td>125972.0</td>\n      <td>125972.0</td>\n      <td>125972.0</td>\n      <td>125972.0</td>\n      <td>125972.0</td>\n      <td>125972.0</td>\n      <td>125972.0</td>\n      <td>125972.0</td>\n      <td>125972</td>\n    </tr>\n    <tr>\n      <th>unique</th>\n      <td>60.0</td>\n      <td>256</td>\n      <td>256</td>\n      <td>101.0</td>\n      <td>101.0</td>\n      <td>101.0</td>\n      <td>75.0</td>\n      <td>101.0</td>\n      <td>100.0</td>\n      <td>101.0</td>\n      <td>101.0</td>\n      <td>23</td>\n    </tr>\n    <tr>\n      <th>top</th>\n      <td>0.0</td>\n      <td>255</td>\n      <td>255</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>normal</td>\n    </tr>\n    <tr>\n      <th>freq</th>\n      <td>97573.0</td>\n      <td>74099</td>\n      <td>35993</td>\n      <td>49059.0</td>\n      <td>46989.0</td>\n      <td>63023.0</td>\n      <td>86903.0</td>\n      <td>81385.0</td>\n      <td>85359.0</td>\n      <td>103178.0</td>\n      <td>106615.0</td>\n      <td>67342</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"# To Do's: After going through description\n1. Merge src and dsy bytes into single total bytes\n2. Remove num_failed_logins because almost 99.9% are 0 in this case\n3. remove it is_host login becasuse 100% are 0","metadata":{}},{"cell_type":"code","source":"df['total-bytes'] = df['src_bytes'] + df['dst_bytes']","metadata":{"execution":{"iopub.status.busy":"2024-04-15T15:53:02.674959Z","iopub.execute_input":"2024-04-15T15:53:02.675529Z","iopub.status.idle":"2024-04-15T15:53:02.689155Z","shell.execute_reply.started":"2024-04-15T15:53:02.675498Z","shell.execute_reply":"2024-04-15T15:53:02.68803Z"},"trusted":true},"execution_count":17,"outputs":[]},{"cell_type":"code","source":"df.drop(columns=['src_bytes','dst_bytes'],axis=1,inplace=True)","metadata":{"execution":{"iopub.status.busy":"2024-04-15T15:53:05.538752Z","iopub.execute_input":"2024-04-15T15:53:05.539156Z","iopub.status.idle":"2024-04-15T15:53:05.609559Z","shell.execute_reply.started":"2024-04-15T15:53:05.539123Z","shell.execute_reply":"2024-04-15T15:53:05.608611Z"},"trusted":true},"execution_count":18,"outputs":[]},{"cell_type":"code","source":"df.drop(columns=['is_host_login','num_failed_logins'],axis=1,inplace=True)","metadata":{"execution":{"iopub.status.busy":"2024-04-15T15:53:09.543676Z","iopub.execute_input":"2024-04-15T15:53:09.544792Z","iopub.status.idle":"2024-04-15T15:53:09.641025Z","shell.execute_reply.started":"2024-04-15T15:53:09.544739Z","shell.execute_reply":"2024-04-15T15:53:09.639881Z"},"trusted":true},"execution_count":19,"outputs":[]},{"cell_type":"code","source":"df.shape","metadata":{"execution":{"iopub.status.busy":"2024-04-15T15:53:11.830878Z","iopub.execute_input":"2024-04-15T15:53:11.831237Z","iopub.status.idle":"2024-04-15T15:53:11.839107Z","shell.execute_reply.started":"2024-04-15T15:53:11.831208Z","shell.execute_reply":"2024-04-15T15:53:11.837908Z"},"trusted":true},"execution_count":20,"outputs":[{"execution_count":20,"output_type":"execute_result","data":{"text/plain":"(125972, 40)"},"metadata":{}}]},{"cell_type":"code","source":"df.T","metadata":{"execution":{"iopub.status.busy":"2024-04-15T15:53:14.362941Z","iopub.execute_input":"2024-04-15T15:53:14.363572Z","iopub.status.idle":"2024-04-15T15:53:14.538283Z","shell.execute_reply.started":"2024-04-15T15:53:14.363526Z","shell.execute_reply":"2024-04-15T15:53:14.537214Z"},"trusted":true},"execution_count":21,"outputs":[{"execution_count":21,"output_type":"execute_result","data":{"text/plain":"                             0        1       2       3        4       \\\nduration                          0        0       0       0        0   \nprotocol_type                   udp      tcp     tcp     tcp      tcp   \nservice                       other  private    http    http  private   \nflag                             SF       S0      SF      SF      REJ   \nland                              0        0       0       0        0   \nwrong_fragment                    0        0       0       0        0   \nurgent                            0        0       0       0        0   \nhot                               0        0       0       0        0   \nlogged_in                         0        0       1       1        0   \nnum_compromised                   0        0       0       0        0   \nroot_shell                        0        0       0       0        0   \nsu_attempted                      0        0       0       0        0   \nnum_root                          0        0       0       0        0   \nnum_file_creations                0        0       0       0        0   \nnum_shells                        0        0       0       0        0   \nnum_access_files                  0        0       0       0        0   \nnum_outbound_cmds                 0        0       0       0        0   \nis_guest_login                    0        0       0       0        0   \ncount                            13      123       5      30      121   \nsrv_count                         1        6       5      32       19   \nserror_rate                     0.0      1.0     0.2     0.0      0.0   \nsrv_serror_rate                 0.0      1.0     0.2     0.0      0.0   \nrerror_rate                     0.0      0.0     0.0     0.0      1.0   \nsrv_rerror_rate                 0.0      0.0     0.0     0.0      1.0   \nsame_srv_rate                  0.08     0.05     1.0     1.0     0.16   \ndiff_srv_rate                  0.15     0.07     0.0     0.0     0.06   \nsrv_diff_host_rate              0.0      0.0     0.0    0.09      0.0   \ndst_host_count                  255      255      30     255      255   \ndst_host_srv_count                1       26     255     255       19   \ndst_host_same_srv_rate          0.0      0.1     1.0     1.0     0.07   \ndst_host_diff_srv_rate          0.6     0.05     0.0     0.0     0.07   \ndst_host_same_src_port_rate    0.88      0.0    0.03     0.0      0.0   \ndst_host_srv_diff_host_rate     0.0      0.0    0.04     0.0      0.0   \ndst_host_serror_rate            0.0      1.0    0.03     0.0      0.0   \ndst_host_srv_serror_rate        0.0      1.0    0.01     0.0      0.0   \ndst_host_rerror_rate            0.0      0.0     0.0     0.0      1.0   \ndst_host_srv_rerror_rate        0.0      0.0    0.01     0.0      1.0   \nattack                       normal  neptune  normal  normal  neptune   \nlast_flag                        15       19      21      21       21   \ntotal-bytes                     146        0    8385     619        0   \n\n                              5        6           7        8        9       \\\nduration                           0        0           0        0        0   \nprotocol_type                    tcp      tcp         tcp      tcp      tcp   \nservice                      private  private  remote_job  private  private   \nflag                              S0       S0          S0       S0      REJ   \nland                               0        0           0        0        0   \nwrong_fragment                     0        0           0        0        0   \nurgent                             0        0           0        0        0   \nhot                                0        0           0        0        0   \nlogged_in                          0        0           0        0        0   \nnum_compromised                    0        0           0        0        0   \nroot_shell                         0        0           0        0        0   \nsu_attempted                       0        0           0        0        0   \nnum_root                           0        0           0        0        0   \nnum_file_creations                 0        0           0        0        0   \nnum_shells                         0        0           0        0        0   \nnum_access_files                   0        0           0        0        0   \nnum_outbound_cmds                  0        0           0        0        0   \nis_guest_login                     0        0           0        0        0   \ncount                            166      117         270      133      205   \nsrv_count                          9       16          23        8       12   \nserror_rate                      1.0      1.0         1.0      1.0      0.0   \nsrv_serror_rate                  1.0      1.0         1.0      1.0      0.0   \nrerror_rate                      0.0      0.0         0.0      0.0      1.0   \nsrv_rerror_rate                  0.0      0.0         0.0      0.0      1.0   \nsame_srv_rate                   0.05     0.14        0.09     0.06     0.06   \ndiff_srv_rate                   0.06     0.06        0.05     0.06     0.06   \nsrv_diff_host_rate               0.0      0.0         0.0      0.0      0.0   \ndst_host_count                   255      255         255      255      255   \ndst_host_srv_count                 9       15          23       13       12   \ndst_host_same_srv_rate          0.04     0.06        0.09     0.05     0.05   \ndst_host_diff_srv_rate          0.05     0.07        0.05     0.06     0.07   \ndst_host_same_src_port_rate      0.0      0.0         0.0      0.0      0.0   \ndst_host_srv_diff_host_rate      0.0      0.0         0.0      0.0      0.0   \ndst_host_serror_rate             1.0      1.0         1.0      1.0      0.0   \ndst_host_srv_serror_rate         1.0      1.0         1.0      1.0      0.0   \ndst_host_rerror_rate             0.0      0.0         0.0      0.0      1.0   \ndst_host_srv_rerror_rate         0.0      0.0         0.0      0.0      1.0   \nattack                       neptune  neptune     neptune  neptune  neptune   \nlast_flag                         21       21          21       21       21   \ntotal-bytes                        0        0           0        0        0   \n\n                             ...  125962   125963  125964   125965  125966  \\\nduration                     ...       0        0       0        0       0   \nprotocol_type                ...     tcp      tcp     tcp      tcp     tcp   \nservice                      ...    http  private    smtp  private    http   \nflag                         ...      SF       S0      SF       S0      SF   \nland                         ...       0        0       0        0       0   \nwrong_fragment               ...       0        0       0        0       0   \nurgent                       ...       0        0       0        0       0   \nhot                          ...       0        0       0        0       0   \nlogged_in                    ...       1        0       1        0       1   \nnum_compromised              ...       0        0       0        0       0   \nroot_shell                   ...       0        0       0        0       0   \nsu_attempted                 ...       0        0       0        0       0   \nnum_root                     ...       0        0       0        0       0   \nnum_file_creations           ...       0        0       0        0       0   \nnum_shells                   ...       0        0       0        0       0   \nnum_access_files             ...       0        0       0        0       0   \nnum_outbound_cmds            ...       0        0       0        0       0   \nis_guest_login               ...       0        0       0        0       0   \ncount                        ...       3      128       1      113       3   \nsrv_count                    ...       3        9       1        3      11   \nserror_rate                  ...     0.0      1.0     0.0      1.0    0.33   \nsrv_serror_rate              ...     0.0      1.0     0.0      1.0    0.09   \nrerror_rate                  ...     0.0      0.0     0.0      0.0     0.0   \nsrv_rerror_rate              ...     0.0      0.0     0.0      0.0     0.0   \nsame_srv_rate                ...     1.0     0.07     1.0     0.03     1.0   \ndiff_srv_rate                ...     0.0     0.05     0.0     0.07     0.0   \nsrv_diff_host_rate           ...     0.0      0.0     0.0      0.0    0.18   \ndst_host_count               ...     255      255       1      255       3   \ndst_host_srv_count           ...     255       12       2       13     255   \ndst_host_same_srv_rate       ...     1.0     0.05     1.0     0.05     1.0   \ndst_host_diff_srv_rate       ...     0.0     0.06     0.0     0.07     0.0   \ndst_host_same_src_port_rate  ...     0.0      0.0     1.0      0.0    0.33   \ndst_host_srv_diff_host_rate  ...     0.0      0.0     1.0      0.0    0.04   \ndst_host_serror_rate         ...     0.0      1.0     0.0      1.0    0.33   \ndst_host_srv_serror_rate     ...     0.0      1.0     0.0      1.0     0.0   \ndst_host_rerror_rate         ...     0.0      0.0     0.0      0.0     0.0   \ndst_host_srv_rerror_rate     ...     0.0      0.0     0.0      0.0     0.0   \nattack                       ...  normal  neptune  normal  neptune  normal   \nlast_flag                    ...      21       21      19       21      18   \ntotal-bytes                  ...    1934        0    2598        0     734   \n\n                              125967   125968  125969   125970    125971  \nduration                           0        8       0        0         0  \nprotocol_type                    tcp      udp     tcp      tcp       tcp  \nservice                      private  private    smtp   klogin  ftp_data  \nflag                              S0       SF      SF       S0        SF  \nland                               0        0       0        0         0  \nwrong_fragment                     0        0       0        0         0  \nurgent                             0        0       0        0         0  \nhot                                0        0       0        0         0  \nlogged_in                          0        0       1        0         1  \nnum_compromised                    0        0       0        0         0  \nroot_shell                         0        0       0        0         0  \nsu_attempted                       0        0       0        0         0  \nnum_root                           0        0       0        0         0  \nnum_file_creations                 0        0       0        0         0  \nnum_shells                         0        0       0        0         0  \nnum_access_files                   0        0       0        0         0  \nnum_outbound_cmds                  0        0       0        0         0  \nis_guest_login                     0        0       0        0         0  \ncount                            184        2       1      144         1  \nsrv_count                         25        2       1        8         1  \nserror_rate                      1.0      0.0     0.0      1.0       0.0  \nsrv_serror_rate                  1.0      0.0     0.0      1.0       0.0  \nrerror_rate                      0.0      0.0     0.0      0.0       0.0  \nsrv_rerror_rate                  0.0      0.0     0.0      0.0       0.0  \nsame_srv_rate                   0.14      1.0     1.0     0.06       1.0  \ndiff_srv_rate                   0.06      0.0     0.0     0.05       0.0  \nsrv_diff_host_rate               0.0      0.0     0.0      0.0       0.0  \ndst_host_count                   255      255     255      255       255  \ndst_host_srv_count                25      244      30        8        77  \ndst_host_same_srv_rate           0.1     0.96    0.12     0.03       0.3  \ndst_host_diff_srv_rate          0.06     0.01    0.06     0.05      0.03  \ndst_host_same_src_port_rate      0.0     0.01     0.0      0.0       0.3  \ndst_host_srv_diff_host_rate      0.0      0.0     0.0      0.0       0.0  \ndst_host_serror_rate             1.0      0.0    0.72      1.0       0.0  \ndst_host_srv_serror_rate         1.0      0.0     0.0      1.0       0.0  \ndst_host_rerror_rate             0.0      0.0    0.01      0.0       0.0  \ndst_host_srv_rerror_rate         0.0      0.0     0.0      0.0       0.0  \nattack                       neptune   normal  normal  neptune    normal  \nlast_flag                         20       21      18       20        21  \ntotal-bytes                        0      250    2615        0       151  \n\n[40 rows x 125972 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>0</th>\n      <th>1</th>\n      <th>2</th>\n      <th>3</th>\n      <th>4</th>\n      <th>5</th>\n      <th>6</th>\n      <th>7</th>\n      <th>8</th>\n      <th>9</th>\n      <th>...</th>\n      <th>125962</th>\n      <th>125963</th>\n      <th>125964</th>\n      <th>125965</th>\n      <th>125966</th>\n      <th>125967</th>\n      <th>125968</th>\n      <th>125969</th>\n      <th>125970</th>\n      <th>125971</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>duration</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>8</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>protocol_type</th>\n      <td>udp</td>\n      <td>tcp</td>\n      <td>tcp</td>\n      <td>tcp</td>\n      <td>tcp</td>\n      <td>tcp</td>\n      <td>tcp</td>\n      <td>tcp</td>\n      <td>tcp</td>\n      <td>tcp</td>\n      <td>...</td>\n      <td>tcp</td>\n      <td>tcp</td>\n      <td>tcp</td>\n      <td>tcp</td>\n      <td>tcp</td>\n      <td>tcp</td>\n      <td>udp</td>\n      <td>tcp</td>\n      <td>tcp</td>\n      <td>tcp</td>\n    </tr>\n    <tr>\n      <th>service</th>\n      <td>other</td>\n      <td>private</td>\n      <td>http</td>\n      <td>http</td>\n      <td>private</td>\n      <td>private</td>\n      <td>private</td>\n      <td>remote_job</td>\n      <td>private</td>\n      <td>private</td>\n      <td>...</td>\n      <td>http</td>\n      <td>private</td>\n      <td>smtp</td>\n      <td>private</td>\n      <td>http</td>\n      <td>private</td>\n      <td>private</td>\n      <td>smtp</td>\n      <td>klogin</td>\n      <td>ftp_data</td>\n    </tr>\n    <tr>\n      <th>flag</th>\n      <td>SF</td>\n      <td>S0</td>\n      <td>SF</td>\n      <td>SF</td>\n      <td>REJ</td>\n      <td>S0</td>\n      <td>S0</td>\n      <td>S0</td>\n      <td>S0</td>\n      <td>REJ</td>\n      <td>...</td>\n      <td>SF</td>\n      <td>S0</td>\n      <td>SF</td>\n      <td>S0</td>\n      <td>SF</td>\n      <td>S0</td>\n      <td>SF</td>\n      <td>SF</td>\n      <td>S0</td>\n      <td>SF</td>\n    </tr>\n    <tr>\n      <th>land</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>wrong_fragment</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>urgent</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>hot</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>logged_in</th>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>num_compromised</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>root_shell</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>su_attempted</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>num_root</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>num_file_creations</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>num_shells</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>num_access_files</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>num_outbound_cmds</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>is_guest_login</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>count</th>\n      <td>13</td>\n      <td>123</td>\n      <td>5</td>\n      <td>30</td>\n      <td>121</td>\n      <td>166</td>\n      <td>117</td>\n      <td>270</td>\n      <td>133</td>\n      <td>205</td>\n      <td>...</td>\n      <td>3</td>\n      <td>128</td>\n      <td>1</td>\n      <td>113</td>\n      <td>3</td>\n      <td>184</td>\n      <td>2</td>\n      <td>1</td>\n      <td>144</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>srv_count</th>\n      <td>1</td>\n      <td>6</td>\n      <td>5</td>\n      <td>32</td>\n      <td>19</td>\n      <td>9</td>\n      <td>16</td>\n      <td>23</td>\n      <td>8</td>\n      <td>12</td>\n      <td>...</td>\n      <td>3</td>\n      <td>9</td>\n      <td>1</td>\n      <td>3</td>\n      <td>11</td>\n      <td>25</td>\n      <td>2</td>\n      <td>1</td>\n      <td>8</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>serror_rate</th>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.2</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.33</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>srv_serror_rate</th>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.2</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.09</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>rerror_rate</th>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>srv_rerror_rate</th>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>same_srv_rate</th>\n      <td>0.08</td>\n      <td>0.05</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>0.16</td>\n      <td>0.05</td>\n      <td>0.14</td>\n      <td>0.09</td>\n      <td>0.06</td>\n      <td>0.06</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>0.07</td>\n      <td>1.0</td>\n      <td>0.03</td>\n      <td>1.0</td>\n      <td>0.14</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>0.06</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>diff_srv_rate</th>\n      <td>0.15</td>\n      <td>0.07</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.06</td>\n      <td>0.06</td>\n      <td>0.06</td>\n      <td>0.05</td>\n      <td>0.06</td>\n      <td>0.06</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.05</td>\n      <td>0.0</td>\n      <td>0.07</td>\n      <td>0.0</td>\n      <td>0.06</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.05</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>srv_diff_host_rate</th>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.09</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.18</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>dst_host_count</th>\n      <td>255</td>\n      <td>255</td>\n      <td>30</td>\n      <td>255</td>\n      <td>255</td>\n      <td>255</td>\n      <td>255</td>\n      <td>255</td>\n      <td>255</td>\n      <td>255</td>\n      <td>...</td>\n      <td>255</td>\n      <td>255</td>\n      <td>1</td>\n      <td>255</td>\n      <td>3</td>\n      <td>255</td>\n      <td>255</td>\n      <td>255</td>\n      <td>255</td>\n      <td>255</td>\n    </tr>\n    <tr>\n      <th>dst_host_srv_count</th>\n      <td>1</td>\n      <td>26</td>\n      <td>255</td>\n      <td>255</td>\n      <td>19</td>\n      <td>9</td>\n      <td>15</td>\n      <td>23</td>\n      <td>13</td>\n      <td>12</td>\n      <td>...</td>\n      <td>255</td>\n      <td>12</td>\n      <td>2</td>\n      <td>13</td>\n      <td>255</td>\n      <td>25</td>\n      <td>244</td>\n      <td>30</td>\n      <td>8</td>\n      <td>77</td>\n    </tr>\n    <tr>\n      <th>dst_host_same_srv_rate</th>\n      <td>0.0</td>\n      <td>0.1</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>0.07</td>\n      <td>0.04</td>\n      <td>0.06</td>\n      <td>0.09</td>\n      <td>0.05</td>\n      <td>0.05</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>0.05</td>\n      <td>1.0</td>\n      <td>0.05</td>\n      <td>1.0</td>\n      <td>0.1</td>\n      <td>0.96</td>\n      <td>0.12</td>\n      <td>0.03</td>\n      <td>0.3</td>\n    </tr>\n    <tr>\n      <th>dst_host_diff_srv_rate</th>\n      <td>0.6</td>\n      <td>0.05</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.07</td>\n      <td>0.05</td>\n      <td>0.07</td>\n      <td>0.05</td>\n      <td>0.06</td>\n      <td>0.07</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.06</td>\n      <td>0.0</td>\n      <td>0.07</td>\n      <td>0.0</td>\n      <td>0.06</td>\n      <td>0.01</td>\n      <td>0.06</td>\n      <td>0.05</td>\n      <td>0.03</td>\n    </tr>\n    <tr>\n      <th>dst_host_same_src_port_rate</th>\n      <td>0.88</td>\n      <td>0.0</td>\n      <td>0.03</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.33</td>\n      <td>0.0</td>\n      <td>0.01</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.3</td>\n    </tr>\n    <tr>\n      <th>dst_host_srv_diff_host_rate</th>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.04</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.04</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>dst_host_serror_rate</th>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.03</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.33</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.72</td>\n      <td>1.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>dst_host_srv_serror_rate</th>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.01</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>dst_host_rerror_rate</th>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.01</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>dst_host_srv_rerror_rate</th>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.01</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>attack</th>\n      <td>normal</td>\n      <td>neptune</td>\n      <td>normal</td>\n      <td>normal</td>\n      <td>neptune</td>\n      <td>neptune</td>\n      <td>neptune</td>\n      <td>neptune</td>\n      <td>neptune</td>\n      <td>neptune</td>\n      <td>...</td>\n      <td>normal</td>\n      <td>neptune</td>\n      <td>normal</td>\n      <td>neptune</td>\n      <td>normal</td>\n      <td>neptune</td>\n      <td>normal</td>\n      <td>normal</td>\n      <td>neptune</td>\n      <td>normal</td>\n    </tr>\n    <tr>\n      <th>last_flag</th>\n      <td>15</td>\n      <td>19</td>\n      <td>21</td>\n      <td>21</td>\n      <td>21</td>\n      <td>21</td>\n      <td>21</td>\n      <td>21</td>\n      <td>21</td>\n      <td>21</td>\n      <td>...</td>\n      <td>21</td>\n      <td>21</td>\n      <td>19</td>\n      <td>21</td>\n      <td>18</td>\n      <td>20</td>\n      <td>21</td>\n      <td>18</td>\n      <td>20</td>\n      <td>21</td>\n    </tr>\n    <tr>\n      <th>total-bytes</th>\n      <td>146</td>\n      <td>0</td>\n      <td>8385</td>\n      <td>619</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>1934</td>\n      <td>0</td>\n      <td>2598</td>\n      <td>0</td>\n      <td>734</td>\n      <td>0</td>\n      <td>250</td>\n      <td>2615</td>\n      <td>0</td>\n      <td>151</td>\n    </tr>\n  </tbody>\n</table>\n<p>40 rows Ã— 125972 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"# Preprocessing Categorical features","metadata":{}},{"cell_type":"code","source":"top_services = df['service'].value_counts().head(5)\nall_services = np.array(df['service'])\nall_services = [service if service in top_services else 'other' for service in all_services]\nall_services = pd.DataFrame(all_services)\ndf['service'] = all_services\ndf.head()","metadata":{"execution":{"iopub.status.busy":"2024-04-15T15:53:22.163136Z","iopub.execute_input":"2024-04-15T15:53:22.163524Z","iopub.status.idle":"2024-04-15T15:53:22.503581Z","shell.execute_reply.started":"2024-04-15T15:53:22.16349Z","shell.execute_reply":"2024-04-15T15:53:22.502496Z"},"trusted":true},"execution_count":22,"outputs":[{"execution_count":22,"output_type":"execute_result","data":{"text/plain":"  duration protocol_type  service flag land wrong_fragment urgent hot  \\\n0        0           udp    other   SF    0              0      0   0   \n1        0           tcp  private   S0    0              0      0   0   \n2        0           tcp     http   SF    0              0      0   0   \n3        0           tcp     http   SF    0              0      0   0   \n4        0           tcp  private  REJ    0              0      0   0   \n\n  logged_in num_compromised  ... dst_host_diff_srv_rate  \\\n0         0               0  ...                    0.6   \n1         0               0  ...                   0.05   \n2         1               0  ...                    0.0   \n3         1               0  ...                    0.0   \n4         0               0  ...                   0.07   \n\n  dst_host_same_src_port_rate dst_host_srv_diff_host_rate  \\\n0                        0.88                         0.0   \n1                         0.0                         0.0   \n2                        0.03                        0.04   \n3                         0.0                         0.0   \n4                         0.0                         0.0   \n\n  dst_host_serror_rate dst_host_srv_serror_rate dst_host_rerror_rate  \\\n0                  0.0                      0.0                  0.0   \n1                  1.0                      1.0                  0.0   \n2                 0.03                     0.01                  0.0   \n3                  0.0                      0.0                  0.0   \n4                  0.0                      0.0                  1.0   \n\n  dst_host_srv_rerror_rate   attack last_flag total-bytes  \n0                      0.0   normal        15         146  \n1                      0.0  neptune        19           0  \n2                     0.01   normal        21        8385  \n3                      0.0   normal        21         619  \n4                      1.0  neptune        21           0  \n\n[5 rows x 40 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>duration</th>\n      <th>protocol_type</th>\n      <th>service</th>\n      <th>flag</th>\n      <th>land</th>\n      <th>wrong_fragment</th>\n      <th>urgent</th>\n      <th>hot</th>\n      <th>logged_in</th>\n      <th>num_compromised</th>\n      <th>...</th>\n      <th>dst_host_diff_srv_rate</th>\n      <th>dst_host_same_src_port_rate</th>\n      <th>dst_host_srv_diff_host_rate</th>\n      <th>dst_host_serror_rate</th>\n      <th>dst_host_srv_serror_rate</th>\n      <th>dst_host_rerror_rate</th>\n      <th>dst_host_srv_rerror_rate</th>\n      <th>attack</th>\n      <th>last_flag</th>\n      <th>total-bytes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>udp</td>\n      <td>other</td>\n      <td>SF</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0.6</td>\n      <td>0.88</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>normal</td>\n      <td>15</td>\n      <td>146</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0</td>\n      <td>tcp</td>\n      <td>private</td>\n      <td>S0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0.05</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>neptune</td>\n      <td>19</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0</td>\n      <td>tcp</td>\n      <td>http</td>\n      <td>SF</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.03</td>\n      <td>0.04</td>\n      <td>0.03</td>\n      <td>0.01</td>\n      <td>0.0</td>\n      <td>0.01</td>\n      <td>normal</td>\n      <td>21</td>\n      <td>8385</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0</td>\n      <td>tcp</td>\n      <td>http</td>\n      <td>SF</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>normal</td>\n      <td>21</td>\n      <td>619</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>tcp</td>\n      <td>private</td>\n      <td>REJ</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0.07</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>neptune</td>\n      <td>21</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 40 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"top_flags = df['flag'].value_counts().head(3)\nall_flags = np.array(df['service'])\nall_flags = [service if service in top_flags else 'other' for service in all_flags]\nall_flags = pd.DataFrame(all_flags)\ndf['service'] = all_flags\ndf.head()","metadata":{"execution":{"iopub.status.busy":"2024-04-15T15:53:28.164368Z","iopub.execute_input":"2024-04-15T15:53:28.165309Z","iopub.status.idle":"2024-04-15T15:53:28.613019Z","shell.execute_reply.started":"2024-04-15T15:53:28.165268Z","shell.execute_reply":"2024-04-15T15:53:28.611886Z"},"trusted":true},"execution_count":23,"outputs":[{"execution_count":23,"output_type":"execute_result","data":{"text/plain":"  duration protocol_type service flag land wrong_fragment urgent hot  \\\n0        0           udp   other   SF    0              0      0   0   \n1        0           tcp   other   S0    0              0      0   0   \n2        0           tcp   other   SF    0              0      0   0   \n3        0           tcp   other   SF    0              0      0   0   \n4        0           tcp   other  REJ    0              0      0   0   \n\n  logged_in num_compromised  ... dst_host_diff_srv_rate  \\\n0         0               0  ...                    0.6   \n1         0               0  ...                   0.05   \n2         1               0  ...                    0.0   \n3         1               0  ...                    0.0   \n4         0               0  ...                   0.07   \n\n  dst_host_same_src_port_rate dst_host_srv_diff_host_rate  \\\n0                        0.88                         0.0   \n1                         0.0                         0.0   \n2                        0.03                        0.04   \n3                         0.0                         0.0   \n4                         0.0                         0.0   \n\n  dst_host_serror_rate dst_host_srv_serror_rate dst_host_rerror_rate  \\\n0                  0.0                      0.0                  0.0   \n1                  1.0                      1.0                  0.0   \n2                 0.03                     0.01                  0.0   \n3                  0.0                      0.0                  0.0   \n4                  0.0                      0.0                  1.0   \n\n  dst_host_srv_rerror_rate   attack last_flag total-bytes  \n0                      0.0   normal        15         146  \n1                      0.0  neptune        19           0  \n2                     0.01   normal        21        8385  \n3                      0.0   normal        21         619  \n4                      1.0  neptune        21           0  \n\n[5 rows x 40 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>duration</th>\n      <th>protocol_type</th>\n      <th>service</th>\n      <th>flag</th>\n      <th>land</th>\n      <th>wrong_fragment</th>\n      <th>urgent</th>\n      <th>hot</th>\n      <th>logged_in</th>\n      <th>num_compromised</th>\n      <th>...</th>\n      <th>dst_host_diff_srv_rate</th>\n      <th>dst_host_same_src_port_rate</th>\n      <th>dst_host_srv_diff_host_rate</th>\n      <th>dst_host_serror_rate</th>\n      <th>dst_host_srv_serror_rate</th>\n      <th>dst_host_rerror_rate</th>\n      <th>dst_host_srv_rerror_rate</th>\n      <th>attack</th>\n      <th>last_flag</th>\n      <th>total-bytes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>udp</td>\n      <td>other</td>\n      <td>SF</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0.6</td>\n      <td>0.88</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>normal</td>\n      <td>15</td>\n      <td>146</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0</td>\n      <td>tcp</td>\n      <td>other</td>\n      <td>S0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0.05</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>neptune</td>\n      <td>19</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0</td>\n      <td>tcp</td>\n      <td>other</td>\n      <td>SF</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.03</td>\n      <td>0.04</td>\n      <td>0.03</td>\n      <td>0.01</td>\n      <td>0.0</td>\n      <td>0.01</td>\n      <td>normal</td>\n      <td>21</td>\n      <td>8385</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0</td>\n      <td>tcp</td>\n      <td>other</td>\n      <td>SF</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>normal</td>\n      <td>21</td>\n      <td>619</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>tcp</td>\n      <td>other</td>\n      <td>REJ</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0.07</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>neptune</td>\n      <td>21</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 40 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"top_attacks = df['attack'].value_counts().head(5)\nall_attacks = np.array(df['service'])\nall_attacks = [service if service in top_attacks else 'other' for service in all_attacks]\nall_attacks = pd.DataFrame(all_flags)\ndf['service'] = all_attacks","metadata":{"execution":{"iopub.status.busy":"2024-04-15T15:53:32.178733Z","iopub.execute_input":"2024-04-15T15:53:32.179102Z","iopub.status.idle":"2024-04-15T15:53:32.609961Z","shell.execute_reply.started":"2024-04-15T15:53:32.179072Z","shell.execute_reply":"2024-04-15T15:53:32.608818Z"},"trusted":true},"execution_count":24,"outputs":[]},{"cell_type":"code","source":"from sklearn.preprocessing import OneHotEncoder\nfrom sklearn.compose import ColumnTransformer","metadata":{"execution":{"iopub.status.busy":"2024-04-15T15:53:36.147307Z","iopub.execute_input":"2024-04-15T15:53:36.147706Z","iopub.status.idle":"2024-04-15T15:53:37.310829Z","shell.execute_reply.started":"2024-04-15T15:53:36.147672Z","shell.execute_reply":"2024-04-15T15:53:37.309715Z"},"trusted":true},"execution_count":25,"outputs":[]},{"cell_type":"code","source":"ohe = OneHotEncoder()\nct = ColumnTransformer(\n  [\n      ('ohe',ohe,['protocol_type','service','attack','flag'])\n  ]\n)\n\ntrf = ct.fit_transform(df)\ntrf = trf.toarray()\ncol_names = ct.get_feature_names_out()\n\ndf2 = pd.DataFrame(trf,columns=col_names)\ndf2","metadata":{"execution":{"iopub.status.busy":"2024-04-15T15:53:39.926736Z","iopub.execute_input":"2024-04-15T15:53:39.927133Z","iopub.status.idle":"2024-04-15T15:53:40.269825Z","shell.execute_reply.started":"2024-04-15T15:53:39.927103Z","shell.execute_reply":"2024-04-15T15:53:40.268851Z"},"trusted":true},"execution_count":26,"outputs":[{"execution_count":26,"output_type":"execute_result","data":{"text/plain":"        ohe__protocol_type_icmp  ohe__protocol_type_tcp  \\\n0                           0.0                     0.0   \n1                           0.0                     1.0   \n2                           0.0                     1.0   \n3                           0.0                     1.0   \n4                           0.0                     1.0   \n...                         ...                     ...   \n125967                      0.0                     1.0   \n125968                      0.0                     0.0   \n125969                      0.0                     1.0   \n125970                      0.0                     1.0   \n125971                      0.0                     1.0   \n\n        ohe__protocol_type_udp  ohe__service_other  ohe__attack_back  \\\n0                          1.0                 1.0               0.0   \n1                          0.0                 1.0               0.0   \n2                          0.0                 1.0               0.0   \n3                          0.0                 1.0               0.0   \n4                          0.0                 1.0               0.0   \n...                        ...                 ...               ...   \n125967                     0.0                 1.0               0.0   \n125968                     1.0                 1.0               0.0   \n125969                     0.0                 1.0               0.0   \n125970                     0.0                 1.0               0.0   \n125971                     0.0                 1.0               0.0   \n\n        ohe__attack_buffer_overflow  ohe__attack_ftp_write  \\\n0                               0.0                    0.0   \n1                               0.0                    0.0   \n2                               0.0                    0.0   \n3                               0.0                    0.0   \n4                               0.0                    0.0   \n...                             ...                    ...   \n125967                          0.0                    0.0   \n125968                          0.0                    0.0   \n125969                          0.0                    0.0   \n125970                          0.0                    0.0   \n125971                          0.0                    0.0   \n\n        ohe__attack_guess_passwd  ohe__attack_imap  ohe__attack_ipsweep  ...  \\\n0                            0.0               0.0                  0.0  ...   \n1                            0.0               0.0                  0.0  ...   \n2                            0.0               0.0                  0.0  ...   \n3                            0.0               0.0                  0.0  ...   \n4                            0.0               0.0                  0.0  ...   \n...                          ...               ...                  ...  ...   \n125967                       0.0               0.0                  0.0  ...   \n125968                       0.0               0.0                  0.0  ...   \n125969                       0.0               0.0                  0.0  ...   \n125970                       0.0               0.0                  0.0  ...   \n125971                       0.0               0.0                  0.0  ...   \n\n        ohe__flag_REJ  ohe__flag_RSTO  ohe__flag_RSTOS0  ohe__flag_RSTR  \\\n0                 0.0             0.0               0.0             0.0   \n1                 0.0             0.0               0.0             0.0   \n2                 0.0             0.0               0.0             0.0   \n3                 0.0             0.0               0.0             0.0   \n4                 1.0             0.0               0.0             0.0   \n...               ...             ...               ...             ...   \n125967            0.0             0.0               0.0             0.0   \n125968            0.0             0.0               0.0             0.0   \n125969            0.0             0.0               0.0             0.0   \n125970            0.0             0.0               0.0             0.0   \n125971            0.0             0.0               0.0             0.0   \n\n        ohe__flag_S0  ohe__flag_S1  ohe__flag_S2  ohe__flag_S3  ohe__flag_SF  \\\n0                0.0           0.0           0.0           0.0           1.0   \n1                1.0           0.0           0.0           0.0           0.0   \n2                0.0           0.0           0.0           0.0           1.0   \n3                0.0           0.0           0.0           0.0           1.0   \n4                0.0           0.0           0.0           0.0           0.0   \n...              ...           ...           ...           ...           ...   \n125967           1.0           0.0           0.0           0.0           0.0   \n125968           0.0           0.0           0.0           0.0           1.0   \n125969           0.0           0.0           0.0           0.0           1.0   \n125970           1.0           0.0           0.0           0.0           0.0   \n125971           0.0           0.0           0.0           0.0           1.0   \n\n        ohe__flag_SH  \n0                0.0  \n1                0.0  \n2                0.0  \n3                0.0  \n4                0.0  \n...              ...  \n125967           0.0  \n125968           0.0  \n125969           0.0  \n125970           0.0  \n125971           0.0  \n\n[125972 rows x 38 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>ohe__protocol_type_icmp</th>\n      <th>ohe__protocol_type_tcp</th>\n      <th>ohe__protocol_type_udp</th>\n      <th>ohe__service_other</th>\n      <th>ohe__attack_back</th>\n      <th>ohe__attack_buffer_overflow</th>\n      <th>ohe__attack_ftp_write</th>\n      <th>ohe__attack_guess_passwd</th>\n      <th>ohe__attack_imap</th>\n      <th>ohe__attack_ipsweep</th>\n      <th>...</th>\n      <th>ohe__flag_REJ</th>\n      <th>ohe__flag_RSTO</th>\n      <th>ohe__flag_RSTOS0</th>\n      <th>ohe__flag_RSTR</th>\n      <th>ohe__flag_S0</th>\n      <th>ohe__flag_S1</th>\n      <th>ohe__flag_S2</th>\n      <th>ohe__flag_S3</th>\n      <th>ohe__flag_SF</th>\n      <th>ohe__flag_SH</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>125967</th>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>125968</th>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>125969</th>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>125970</th>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>125971</th>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>125972 rows Ã— 38 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df.drop(columns=['protocol_type','service','attack','flag'],axis=1,inplace=True)","metadata":{"execution":{"iopub.status.busy":"2024-04-15T15:53:53.16278Z","iopub.execute_input":"2024-04-15T15:53:53.163217Z","iopub.status.idle":"2024-04-15T15:53:53.227018Z","shell.execute_reply.started":"2024-04-15T15:53:53.163184Z","shell.execute_reply":"2024-04-15T15:53:53.226095Z"},"trusted":true},"execution_count":27,"outputs":[]},{"cell_type":"code","source":"df = pd.concat([df,df2],axis=1)","metadata":{"execution":{"iopub.status.busy":"2024-04-15T15:53:56.150878Z","iopub.execute_input":"2024-04-15T15:53:56.151434Z","iopub.status.idle":"2024-04-15T15:53:56.450207Z","shell.execute_reply.started":"2024-04-15T15:53:56.151404Z","shell.execute_reply":"2024-04-15T15:53:56.449Z"},"trusted":true},"execution_count":28,"outputs":[]},{"cell_type":"code","source":"df.shape","metadata":{"execution":{"iopub.status.busy":"2024-04-15T15:53:58.910834Z","iopub.execute_input":"2024-04-15T15:53:58.911387Z","iopub.status.idle":"2024-04-15T15:53:58.917023Z","shell.execute_reply.started":"2024-04-15T15:53:58.911358Z","shell.execute_reply":"2024-04-15T15:53:58.916025Z"},"trusted":true},"execution_count":29,"outputs":[{"execution_count":29,"output_type":"execute_result","data":{"text/plain":"(125972, 74)"},"metadata":{}}]},{"cell_type":"markdown","source":"# Elbow Function","metadata":{}},{"cell_type":"markdown","source":"**Elbow function helps us determine the total number of n_clustors**","metadata":{}},{"cell_type":"code","source":"from sklearn.cluster import KMeans","metadata":{"execution":{"iopub.status.busy":"2024-04-15T15:54:01.358465Z","iopub.execute_input":"2024-04-15T15:54:01.359402Z","iopub.status.idle":"2024-04-15T15:54:01.770195Z","shell.execute_reply.started":"2024-04-15T15:54:01.359366Z","shell.execute_reply":"2024-04-15T15:54:01.769009Z"},"trusted":true},"execution_count":30,"outputs":[]},{"cell_type":"code","source":"expected_clustors = range(1,20)\nwcss = []\nfor i in expected_clustors:\n    kmeans = KMeans(i)\n    kmeans.fit(df)\n    wcss.append(kmeans.inertia_)","metadata":{"execution":{"iopub.status.busy":"2024-04-15T15:54:04.362701Z","iopub.execute_input":"2024-04-15T15:54:04.363712Z","iopub.status.idle":"2024-04-15T15:55:30.641808Z","shell.execute_reply.started":"2024-04-15T15:54:04.363674Z","shell.execute_reply":"2024-04-15T15:55:30.640957Z"},"trusted":true},"execution_count":31,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n  warnings.warn(\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# Plot WCSS or Inertia ","metadata":{}},{"cell_type":"code","source":"import matplotlib.pyplot as plt ","metadata":{"execution":{"iopub.status.busy":"2024-04-15T15:55:41.586947Z","iopub.execute_input":"2024-04-15T15:55:41.587888Z","iopub.status.idle":"2024-04-15T15:55:41.59286Z","shell.execute_reply.started":"2024-04-15T15:55:41.587839Z","shell.execute_reply":"2024-04-15T15:55:41.59169Z"},"trusted":true},"execution_count":32,"outputs":[]},{"cell_type":"code","source":"plt.figure(figsize=(14,4))\nplt.plot(expected_clustors,wcss,marker='o')\nplt.xlabel('Clustors')\nplt.ylabel('WCSS/Inertia')\nplt.legend()\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-04-15T15:55:43.717292Z","iopub.execute_input":"2024-04-15T15:55:43.717985Z","iopub.status.idle":"2024-04-15T15:55:44.016843Z","shell.execute_reply.started":"2024-04-15T15:55:43.717945Z","shell.execute_reply":"2024-04-15T15:55:44.015715Z"},"trusted":true},"execution_count":33,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1400x400 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"**From this graph we should take 3 as the clustors number because here the graph is started stablelizing done by Shivam dave and Badal Desai**","metadata":{}},{"cell_type":"markdown","source":"# Train Model with n_clustors=3","metadata":{}},{"cell_type":"code","source":"kmeans2 = KMeans(n_clusters=3)","metadata":{"execution":{"iopub.status.busy":"2024-04-15T15:55:47.992202Z","iopub.execute_input":"2024-04-15T15:55:47.993098Z","iopub.status.idle":"2024-04-15T15:55:47.998826Z","shell.execute_reply.started":"2024-04-15T15:55:47.993053Z","shell.execute_reply":"2024-04-15T15:55:47.99766Z"},"trusted":true},"execution_count":34,"outputs":[]},{"cell_type":"code","source":"kmeans2.fit(df)","metadata":{"execution":{"iopub.status.busy":"2024-04-15T15:55:51.74762Z","iopub.execute_input":"2024-04-15T15:55:51.748061Z","iopub.status.idle":"2024-04-15T15:55:55.322642Z","shell.execute_reply.started":"2024-04-15T15:55:51.748026Z","shell.execute_reply":"2024-04-15T15:55:55.321541Z"},"trusted":true},"execution_count":35,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n  warnings.warn(\n","output_type":"stream"},{"execution_count":35,"output_type":"execute_result","data":{"text/plain":"KMeans(n_clusters=3)","text/html":"<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KMeans(n_clusters=3)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KMeans</label><div class=\"sk-toggleable__content\"><pre>KMeans(n_clusters=3)</pre></div></div></div></div></div>"},"metadata":{}}]},{"cell_type":"markdown","source":"# Measure the Performance","metadata":{}},{"cell_type":"markdown","source":"**We use silhouette_score to measure the performance it tells us how the point similar to it's clustor**","metadata":{}},{"cell_type":"code","source":"from sklearn.metrics import silhouette_score","metadata":{"execution":{"iopub.status.busy":"2024-04-15T15:55:59.321811Z","iopub.execute_input":"2024-04-15T15:55:59.322182Z","iopub.status.idle":"2024-04-15T15:55:59.327921Z","shell.execute_reply.started":"2024-04-15T15:55:59.322152Z","shell.execute_reply":"2024-04-15T15:55:59.326659Z"},"trusted":true},"execution_count":36,"outputs":[]},{"cell_type":"code","source":"avg_silhouette_score = silhouette_score(df,kmeans2.labels_)","metadata":{"execution":{"iopub.status.busy":"2024-04-15T15:56:03.331308Z","iopub.execute_input":"2024-04-15T15:56:03.331721Z","iopub.status.idle":"2024-04-15T15:59:38.322771Z","shell.execute_reply.started":"2024-04-15T15:56:03.331686Z","shell.execute_reply":"2024-04-15T15:59:38.321855Z"},"trusted":true},"execution_count":37,"outputs":[]},{"cell_type":"code","source":"print('The avg_silhouette_score is ',avg_silhouette_score)","metadata":{"execution":{"iopub.status.busy":"2024-04-15T15:59:39.045029Z","iopub.execute_input":"2024-04-15T15:59:39.04619Z","iopub.status.idle":"2024-04-15T15:59:39.050569Z","shell.execute_reply.started":"2024-04-15T15:59:39.046144Z","shell.execute_reply":"2024-04-15T15:59:39.049853Z"},"trusted":true},"execution_count":39,"outputs":[{"name":"stdout","text":"The avg_silhouette_score is  0.9999189987845539\n","output_type":"stream"}]},{"cell_type":"markdown","source":"> **Dividing on the basis of clusters **","metadata":{}},{"cell_type":"markdown","source":"# Exporting to json","metadata":{}},{"cell_type":"markdown","source":"","metadata":{}},{"cell_type":"code","source":"df_reset = df.reset_index(drop=True)\n\n# Assuming kmeans2.labels_ contains the cluster labels assigned by KMeans\ncluster_dict = defaultdict(list)\n\nfor idx, label in enumerate(kmeans2.labels_):\n    cluster_dict[label].append(df_reset.iloc[idx])  # Using iloc with reset index\n\n# Convert defaultdict to regular dictionary if needed\ncluster_dict = dict(cluster_dict)\n\n# Now cluster_dict contains elements grouped by their clusters","metadata":{"execution":{"iopub.status.busy":"2024-04-15T16:27:28.197545Z","iopub.execute_input":"2024-04-15T16:27:28.197973Z","iopub.status.idle":"2024-04-15T16:27:48.057399Z","shell.execute_reply.started":"2024-04-15T16:27:28.197941Z","shell.execute_reply":"2024-04-15T16:27:48.055862Z"},"trusted":true},"execution_count":51,"outputs":[]},{"cell_type":"code","source":"import json\n\n# Assuming cluster_dict contains the dictionary with cluster data\n\n# Convert dictionary to JSON format\ncluster_json = json.dumps(cluster_dict, indent=4)\n\n# Write JSON data to a .json file\nwith open('cluster_data.json', 'w') as json_file:\n    json_file.write(cluster_json)","metadata":{"execution":{"iopub.status.busy":"2024-04-15T16:28:22.427042Z","iopub.execute_input":"2024-04-15T16:28:22.428235Z","iopub.status.idle":"2024-04-15T16:28:32.531612Z","shell.execute_reply.started":"2024-04-15T16:28:22.428202Z","shell.execute_reply":"2024-04-15T16:28:32.530362Z"},"trusted":true},"execution_count":53,"outputs":[]},{"cell_type":"markdown","source":"# Plotting Modified Cluster Data","metadata":{}},{"cell_type":"markdown","source":"","metadata":{}},{"cell_type":"code","source":"import json\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Load the JSON data\nwith open(\"/kaggle/input/modified-cluster-data/modified_cluster_data.json\", \"r\") as file:\n    cluster_data = json.load(file)\n\n# Function to plot bar chart for a given feature\ndef plot_feature_distribution(cluster_id, feature_data, feature_name):\n    unique_values = list(feature_data.keys())\n    frequencies = list(feature_data.values())\n\n    plt.figure(figsize=(8, 6))\n    sns.barplot(x=unique_values, y=frequencies)\n    plt.title(f\"Cluster {cluster_id} - {feature_name} Distribution\")\n    plt.xlabel(feature_name)\n    plt.ylabel(\"Frequency\")\n    plt.xticks(rotation=45)\n    plt.grid(axis=\"y\")\n    plt.show()\n\n# Iterate over each cluster and plot the distribution of protocol types, attacks, and flags\nfor cluster_id, entries in cluster_data.items():\n    protocol_types = {}\n    attacks = {}\n    flags = {}\n\n    for entry in entries:\n        protocol_type = entry[\"protocol_type\"]\n        attacks[entry[\"attack\"]] = attacks.get(entry[\"attack\"], 0) + 1\n        flags[entry[\"flag\"]] = flags.get(entry[\"flag\"], 0) + 1\n\n        if protocol_type in protocol_types:\n            protocol_types[protocol_type] += 1\n        else:\n            protocol_types[protocol_type] = 1\n\n    plot_feature_distribution(cluster_id, protocol_types, \"Protocol Type\")\n    plot_feature_distribution(cluster_id, attacks, \"Attack\")\n    plot_feature_distribution(cluster_id, flags, \"Flag\")\n","metadata":{"execution":{"iopub.status.busy":"2024-04-18T06:18:27.657758Z","iopub.execute_input":"2024-04-18T06:18:27.658143Z","iopub.status.idle":"2024-04-18T06:18:30.218917Z","shell.execute_reply.started":"2024-04-18T06:18:27.65811Z","shell.execute_reply":"2024-04-18T06:18:30.217743Z"},"trusted":true},"execution_count":13,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1765: FutureWarning: unique with argument that is not not a Series, Index, ExtensionArray, or np.ndarray is deprecated and will raise in a future version.\n  order = pd.unique(vector)\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 800x600 with 1 Axes>","image/png":""},"metadata":{}},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1765: FutureWarning: unique with argument that is not not a Series, Index, ExtensionArray, or np.ndarray is deprecated and will raise in a future version.\n  order = pd.unique(vector)\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 800x600 with 1 Axes>","image/png":""},"metadata":{}},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1765: FutureWarning: unique with argument that is not not a Series, Index, ExtensionArray, or np.ndarray is deprecated and will raise in a future version.\n  order = pd.unique(vector)\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 800x600 with 1 Axes>","image/png":""},"metadata":{}},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1765: FutureWarning: unique with argument that is not not a Series, Index, ExtensionArray, or np.ndarray is deprecated and will raise in a future version.\n  order = pd.unique(vector)\n/opt/conda/lib/python3.10/site-packages/seaborn/categorical.py:645: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  g_vals = grouped_vals.get_group(g)\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 800x600 with 1 Axes>","image/png":""},"metadata":{}},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1765: FutureWarning: unique with argument that is not not a Series, Index, ExtensionArray, or np.ndarray is deprecated and will raise in a future version.\n  order = pd.unique(vector)\n/opt/conda/lib/python3.10/site-packages/seaborn/categorical.py:645: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  g_vals = grouped_vals.get_group(g)\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 800x600 with 1 Axes>","image/png":""},"metadata":{}},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1765: FutureWarning: unique with argument that is not not a Series, Index, ExtensionArray, or np.ndarray is deprecated and will raise in a future version.\n  order = pd.unique(vector)\n/opt/conda/lib/python3.10/site-packages/seaborn/categorical.py:645: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  g_vals = grouped_vals.get_group(g)\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 800x600 with 1 Axes>","image/png":""},"metadata":{}},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1765: FutureWarning: unique with argument that is not not a Series, Index, ExtensionArray, or np.ndarray is deprecated and will raise in a future version.\n  order = pd.unique(vector)\n/opt/conda/lib/python3.10/site-packages/seaborn/categorical.py:645: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  g_vals = grouped_vals.get_group(g)\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 800x600 with 1 Axes>","image/png":""},"metadata":{}},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1765: FutureWarning: unique with argument that is not not a Series, Index, ExtensionArray, or np.ndarray is deprecated and will raise in a future version.\n  order = pd.unique(vector)\n/opt/conda/lib/python3.10/site-packages/seaborn/categorical.py:645: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  g_vals = grouped_vals.get_group(g)\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 800x600 with 1 Axes>","image/png":""},"metadata":{}},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1765: FutureWarning: unique with argument that is not not a Series, Index, ExtensionArray, or np.ndarray is deprecated and will raise in a future version.\n  order = pd.unique(vector)\n/opt/conda/lib/python3.10/site-packages/seaborn/categorical.py:645: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  g_vals = grouped_vals.get_group(g)\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 800x600 with 1 Axes>","image/png":"iVBORw0KGgoAAAANSUhEUgAAArMAAAJGCAYAAABIuA2xAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuNSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/xnp5ZAAAACXBIWXMAAA9hAAAPYQGoP6dpAAA8zUlEQVR4nO3deViVdf7/8ddhFxXUQFBDcS/T1FCI1NTJESszbRm3RE1tccmiTco0R9PK0dHGrRq3csotR5syd2sqmctdv+a476aIKwoJyLl/f/TzTCdA4QjcfPT5uC6u6dzc97nfB72mZzefcx+HZVmWAAAAAAN52T0AAAAA4CliFgAAAMYiZgEAAGAsYhYAAADGImYBAABgLGIWAAAAxiJmAQAAYCxiFgAAAMYiZgEAAGAsYhZAgUVGRqpXr152j3FT69WrlyIjI+0eI1++/fZbORwOffvtt0V+rrffflsOh8Ntm8Ph0MCBA4v83JI0a9YsORwOHTp0qFjOB+D6iFkALvv379ezzz6rGjVqKCAgQEFBQWrWrJkmTpyoX375pVhmSE9P19tvv10sYfRbU6dO1ZNPPqmqVavK4XAUWawfOnRIDocj16977723SM55I/P5+voqJCRE9913n9544w0dOXKk0M41evRoLV68uNCerzCV5NkAuPOxewAAJcPXX3+tJ598Uv7+/oqPj1f9+vWVmZmpH374Qa+++qp++uknffTRR0U+R3p6ukaMGCFJatWqVZGf76r33ntPFy9eVHR0tE6cOFHk5+vataseeught22hoaFFft78ujqf0+nUuXPntGHDBk2YMEETJ07U9OnT1aVLF9e+999/v3755Rf5+fkV6ByjR4/WE088oY4dO+b7mKFDh2rIkCEFOo8n8pqtR48e6tKli/z9/Yt8BgD5Q8wC0MGDB9WlSxdVq1ZNa9asUaVKlVzfGzBggPbt26evv/7axglvXFpamkqXLp3n97/77jvXVdkyZcoU+Tz33HOPnnrqqSI/j6dym+/w4cNq27atevbsqTvvvFMNGzaUJHl5eSkgIKBI57n65+fj4yMfH/v+1eXt7S1vb2/bzg8gJ5YZAND777+vS5cuafr06W4he1WtWrU0ePDgPI/PbR2jlPv6wo0bNyouLk4hISEqVaqUqlevrqefflrSr7/ivnp1csSIEa5fdb/99tuu43ft2qUnnnhCFSpUUEBAgJo0aaIvv/wy1/N+99136t+/vypWrKjbb7/9mj+DatWq5foaSpK//OUvuu+++3TbbbepVKlSioqK0sKFC3Ps98svv+iFF15QSEiIypYtqw4dOuj48eM5fpYFVa1aNc2aNUuZmZl6//33XdtzWzO7d+9ePf744woPD1dAQIBuv/12denSRRcuXJD06zrXtLQ0zZ492/XnfHVpx9W/Tzt37lS3bt1Uvnx5NW/e3O17ufnHP/6hunXrKiAgQFFRUfr3v//t9v281iH//jmvNVtea2anTJmiu+66S/7+/qpcubIGDBig8+fPu+3TqlUr1a9fXzt37lTr1q0VGBioKlWquP0sARQcV2YB6F//+pdq1Kih++67r0jPc+rUKbVt21ahoaEaMmSIypUrp0OHDmnRokWSfv01+9SpU/X888+rU6dOeuyxxyRJd999tyTpp59+UrNmzVSlShUNGTJEpUuX1vz589WxY0d98cUX6tSpk9v5+vfvr9DQUA0bNkxpaWlF+toKKj09XadPn3bbFhwcLF9f3zyPmThxojp06KDu3bsrMzNTc+fO1ZNPPqmvvvpKDz/8sGu/Xr16af78+erRo4fuvfdefffdd27fvxGxsbGqWbOmVq5cmec+mZmZiouLU0ZGhgYNGqTw8HAdP35cX331lc6fP6/g4GB9+umn6tu3r6Kjo/XMM89IkmrWrOn2PE8++aRq166t0aNHy7Ksa8713Xffad68eXrhhRfk7++vKVOmqF27dlq/fr3q169foNeYn9l+6+2339aIESPUpk0bPf/889q9e7emTp2qDRs26Mcff3T7Mz137pzatWunxx57TH/605+0cOFCvf7662rQoIEefPDBAs0J4P+zANzSLly4YEmyHn300XwfU61aNatnz56ux8OHD7dy+7+TmTNnWpKsgwcPWpZlWf/85z8tSdaGDRvyfO6UlBRLkjV8+PAc33vggQesBg0aWJcvX3Ztczqd1n333WfVrl07x3mbN29uXblyJd+v66rSpUu7vb7CdPDgQUtSrl9r16517dezZ0+rWrVqbsemp6e7Pc7MzLTq169v/eEPf3Bt27RpkyXJevHFF9327dWrV54/19zmGzt2bJ77PProo5Yk68KFC5ZlWdbatWvd5t+yZYslyVqwYME1z5XXz/nq36euXbvm+b3fuvrz27hxo2vb4cOHrYCAAKtTp06ubbn9TPN6zrxm+/3f6VOnTll+fn5W27ZtrezsbNd+kyZNsiRZM2bMcG1r2bKlJcn65JNPXNsyMjKs8PBw6/HHH89xLgD5wzID4BaXmpoqSSpbtmyRn6tcuXKSpK+++kpZWVkFOvbs2bNas2aN/vSnP+nixYs6ffq0Tp8+rTNnziguLk579+7V8ePH3Y7p169fiV3f+Mwzz2jlypVuX1fXoOalVKlSrn8+d+6cLly4oBYtWmjz5s2u7cuWLZP061Xp3xo0aFChzX51TfHFixdz/X5wcLAkafny5UpPT/f4PM8991y+942NjVVUVJTrcdWqVfXoo49q+fLlys7O9niG61m1apUyMzP14osvysvrf/9K7devn4KCgnKsNS9TpozbWmQ/Pz9FR0frwIEDRTYjcLNjmQFwiwsKCpKUd5gUppYtW+rxxx/XiBEj9Ne//lWtWrVSx44d1a1bt+u+O3zfvn2yLEtvvfWW3nrrrVz3OXXqlKpUqeJ6XL169UKdPzfZ2dlKSUlx21ahQoXrvrO/du3aatOmTYHO9dVXX2nUqFHaunWrMjIyXNt/u97z8OHD8vLyyvHaa9WqVaBzXculS5ck5f0fQNWrV1dCQoLGjx+vf/zjH2rRooU6dOigp556yhW6+VGQP7/atWvn2FanTh2lp6crJSVF4eHh+X6ugjh8+LAkqW7dum7b/fz8VKNGDdf3r7r99ttzrPktX768tm/fXiTzAbcCrswCt7igoCBVrlxZO3bs8Pg58npDzu+viDkcDi1cuFBJSUkaOHCgjh8/rqefflpRUVGuQMqL0+mUJL3yyis5rmhe/fp9sP32SmZROXr0qCpVquT2tW7dukI/z/fff68OHTooICBAU6ZM0dKlS7Vy5Up169btuutJC9uOHTtUsWJF138I5WbcuHHavn273njjDdcb0u666y4dO3Ys3+cp7D+//P49LUp5/aaguP8MgZsJV2YBqH379vroo4+UlJSk2NjYAh9fvnx5SdL58+ddSwkk5bgqddW9996re++9V++8844+++wzde/eXXPnzlXfvn3zDI4aNWpIknx9fQt8RbMohYeH53gz1PWWC3jiiy++UEBAgJYvX+52FXvmzJlu+1WrVk1Op1MHDx50u1q5b9++QpkjKSlJ+/fvz9dtxRo0aKAGDRpo6NChWrdunZo1a6Zp06Zp1KhRkvKOS0/s3bs3x7Y9e/YoMDDQdYeM8uXL57jDgJT739P8zlatWjVJ0u7du11/R6Vf3wR38ODBEvV3FbhZcWUWgF577TWVLl1affv2VXJyco7v79+/XxMnTszz+Kvv9P7trZCu3trot86dO5fjClSjRo0kyfVr88DAQEnKER0VK1ZUq1at9OGHH+b6oQa//1V/cQkICFCbNm3cvq7GfWHy9vaWw+Fwu4p46NChHJ9SFRcXJ+nXW0X91t/+9rcbnuHw4cPq1auX/Pz89Oqrr+a5X2pqqq5cueK2rUGDBvLy8nJbHlG6dOlc49ITSUlJbmuHjx49qiVLlqht27auq6E1a9bUhQsX3H6lf+LECf3zn//M8Xz5na1Nmzby8/PTBx984PZ3e/r06bpw4UKh3UUCQN64MgtANWvW1GeffabOnTvrzjvvdPsEsHXr1mnBggXX/HjXtm3bqmrVqurTp49effVVeXt7a8aMGQoNDXX7+NPZs2drypQp6tSpk2rWrKmLFy/q448/VlBQkOvTsEqVKqV69epp3rx5qlOnjipUqKD69eurfv36mjx5spo3b64GDRqoX79+qlGjhpKTk5WUlKRjx45p27ZtHv8M/vWvf7mOz8rK0vbt211XEDt06OC6PZhdHn74YY0fP17t2rVTt27ddOrUKU2ePFm1atVyi7OoqCg9/vjjmjBhgs6cOeO6NdeePXsk5f+K4+bNmzVnzhw5nU6dP39eGzZs0BdffCGHw6FPP/30mj+PNWvWaODAgXryySdVp04dXblyRZ9++qm8vb31+OOPu826atUqjR8/XpUrV1b16tUVExPj0c+nfv36iouLc7s1lyTXp8lJUpcuXfT666+rU6dOeuGFF5Senq6pU6eqTp06biFckNlCQ0OVmJioESNGqF27durQoYN2796tKVOmqGnTpiX6gzGAm4at91IAUKLs2bPH6tevnxUZGWn5+flZZcuWtZo1a2b97W9/c7sd1u9vzWVZv94SKiYmxvLz87OqVq1qjR8/PsdtjDZv3mx17drVqlq1quXv729VrFjRat++vdstlSzLstatW2dFRUVZfn5+OW4ntX//fis+Pt4KDw+3fH19rSpVqljt27e3Fi5c6Nrn6nmvdQuw3+vZs2eet8yaOXNmvp/nevJz66ur8/z+NlLTp0+3ateubfn7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"},"metadata":{}}]},{"cell_type":"markdown","source":"","metadata":{}}]}